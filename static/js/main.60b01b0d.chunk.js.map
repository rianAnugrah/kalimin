{"version":3,"sources":["logo.svg","shared/Atoms/Button/Default.js","shared/Atoms/Button/Button.js","shared/Atoms/Table/Head.js","shared/Atoms/Table/Container.js","shared/Atoms/Table/Body.js","shared/Atoms/Table/Row.js","shared/Atoms/Table/Cell.js","shared/Atoms/Table/Footer.js","shared/Atoms/Table/Table.js","shared/Molecule/SampleTable/SampleTable.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Default","styled","button","props","disabled","css","primary","secondary","Button","this","React","Component","Head","thead","Container","table","Body","tbody","Row","tr","Cell","td","Footer","tfoot","Table","SampleTable","App","className","src","logo","alt","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,kC,y0BCEpC,IAAMC,EAAUC,IAAOC,OAAV,KAKhB,SAAAC,GAAK,OACLA,EAAMC,SACFC,YADJ,KAMIA,YANJ,KAQU,SAAAF,GAAK,OACLA,EAAMG,SAAsBH,EAAMI,UAAlB,UAA0C,UAC1C,SAAAJ,GAAK,OACvBA,EAAMG,QAAU,UAAYH,EAAMI,UAAY,UAAY,UACnD,SAAAJ,GAAK,OACZA,EAAMG,QAAU,UAAYH,EAAMI,UAAY,OAAS,gBCZpDC,E,uKAJX,OAAO,kBAACR,EAAYS,KAAKN,W,GAFRO,IAAMC,W,8KCDpB,IAAMC,EAAOX,IAAOY,MAAV,K,oQCAV,IAAMC,EAAYb,IAAOc,MAAV,K,gNCAf,IAAMC,EAAOf,IAAOgB,MAAV,K,oMCAV,IAAMC,EAAMjB,IAAOkB,GAAV,K,sHCAT,IAAMC,EAAOnB,IAAOoB,GAAV,K,4ECAV,IAAMC,EAASrB,IAAOsB,MAAV,KCMbC,E,uKAQF,OAAO,kBAACV,EAAcL,KAAKN,W,GARXO,IAAMC,WAApBa,EACGZ,KAAOA,EADVY,EAEGR,KAAOA,EAFVQ,EAGGN,IAAMA,EAHTM,EAIGJ,KAAOA,EAJVI,EAKGF,OAASA,EAOHE,QCjBA,SAASC,IACtB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAMb,KAAP,KACE,kBAAC,EAAMM,IAAP,KACE,kBAAC,EAAME,KAAP,WACA,kBAAC,EAAMA,KAAP,aACA,kBAAC,EAAMA,KAAP,cACA,kBAAC,EAAMA,KAAP,iBAGJ,kBAAC,EAAMJ,KAAP,KACE,kBAAC,EAAME,IAAP,KACE,kBAAC,EAAME,KAAP,UACA,kBAAC,EAAMA,KAAP,aACA,kBAAC,EAAMA,KAAP,4BACA,kBAAC,EAAMA,KAAP,gBAEF,kBAAC,EAAMF,IAAP,KACE,kBAAC,EAAME,KAAP,UACA,kBAAC,EAAMA,KAAP,aACA,kBAAC,EAAMA,KAAP,4BACA,kBAAC,EAAMA,KAAP,gBAEF,kBAAC,EAAMF,IAAP,KACE,kBAAC,EAAME,KAAP,UACA,kBAAC,EAAMA,KAAP,aACA,kBAAC,EAAMA,KAAP,4BACA,kBAAC,EAAMA,KAAP,kBCFKM,MAvBf,WACE,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,mCACO,4CADP,wBAGA,kBAACL,EAAD,MAEA,uBACEE,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAEJ,kBAAC,EAAD,CAAQ3B,SAAO,GAAf,oBCVU4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.60b01b0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import styled, { css } from \"styled-components\";\r\n\r\nexport const Default = styled.button`\r\n  height: 40px;\r\n  width: 150px;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  ${props =>\r\n    props.disabled\r\n      ? css`\r\n          border: 1px solid #ddd;\r\n          background-color:#ddd;\r\n          color: #999;\r\n        `\r\n      : css`\r\n          border: 1px solid\r\n            ${props =>\r\n              props.primary ? \"#004970\" : props.secondary ? \"#004970\" : \"#333\"};\r\n          background-color: ${props =>\r\n            props.primary ? \"#004970\" : props.secondary ? \"#ffffff\" : \"#333\"};\r\n          color: ${props =>\r\n            props.primary ? \"#ffffff\" : props.secondary ? \"#333\" : \"#ffffff\"};\r\n\r\n          &:hover {\r\n            opacity: 0.8;\r\n          }\r\n        `}\r\n`;\r\n","import React from \"react\";\r\nimport { Default } from \"./Default\";\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    return <Default {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Head = styled.thead`\r\n  background-color: #004970;\r\n  border-left: 16px solid #004970;\r\n  border-right: 16px solid #004970;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.table`\r\n  width: calc(100% - 32px);\r\n  border-collapse: collapse;\r\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.12);\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  margin: 16px;\r\n  font-size: 14px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Body = styled.tbody`\r\n  background-color: white;\r\n  color: #25282b;\r\n  padding: 8px;\r\n  border-left: 16px solid white;\r\n  border-right: 16px solid white;\r\n  \r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Row = styled.tr`\r\n  border-bottom: 1px solid #a8a9aa;\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Cell = styled.td`\r\n  padding: 8px;\r\n  /* background: #ddd; */\r\n \r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Footer = styled.tfoot`\r\n\r\n \r\n`;\r\n","import React from \"react\";\r\nimport { Head } from \"./Head\";\r\nimport { Container } from \"./Container\";\r\nimport { Body } from \"./Body\";\r\nimport { Row } from \"./Row\";\r\nimport { Cell } from \"./Cell\";\r\nimport { Footer } from \"./Footer\";\r\n\r\nclass Table extends React.Component {\r\n  static Head = Head;\r\n  static Body = Body;\r\n  static Row = Row;\r\n  static Cell = Cell;\r\n  static Footer = Footer;\r\n\r\n  render() {\r\n    return <Container {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport { Table } from \"../../Atoms\";\r\n\r\nexport default function SampleTable() {\r\n  return (\r\n    <Table>\r\n      <Table.Head>\r\n        <Table.Row>\r\n          <Table.Cell>No</Table.Cell>\r\n          <Table.Cell>Name</Table.Cell>\r\n          <Table.Cell>Email</Table.Cell>\r\n          <Table.Cell>Status</Table.Cell>\r\n        </Table.Row>\r\n      </Table.Head>\r\n      <Table.Body>\r\n        <Table.Row>\r\n          <Table.Cell>1</Table.Cell>\r\n          <Table.Cell>Rian</Table.Cell>\r\n          <Table.Cell>rian@theravenry.com</Table.Cell>\r\n          <Table.Cell>active</Table.Cell>\r\n        </Table.Row>\r\n        <Table.Row>\r\n          <Table.Cell>1</Table.Cell>\r\n          <Table.Cell>Rian</Table.Cell>\r\n          <Table.Cell>rian@theravenry.com</Table.Cell>\r\n          <Table.Cell>active</Table.Cell>\r\n        </Table.Row>\r\n        <Table.Row>\r\n          <Table.Cell>1</Table.Cell>\r\n          <Table.Cell>Rian</Table.Cell>\r\n          <Table.Cell>rian@theravenry.com</Table.Cell>\r\n          <Table.Cell>active</Table.Cell>\r\n        </Table.Row>\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n}\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Button } from \"./shared/Atoms\";\nimport { SampleTable } from \"./shared/Molecule\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <SampleTable />\n\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Button primary>Learn React </Button>\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}